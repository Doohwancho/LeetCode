package juneChallenge;

import java.util.Arrays;

public class DungeonGame {
	
	/*
	//<Trial01>
	
	//焼たたたたたたた 乞牽畏陥
	
	//馬球革.. 盛
	
    public int calculateMinimumHP(int[][] dungeon) {
        int n = dungeon.length;
        int m = dungeon[0].length;
        
        for(int i = 0, j = 1; j < m; j++){
            dungeon[i][j] += dungeon[i][j-1]; 
            dungeon[j][i] += dungeon[j-1][i];
        }
        int rst = 0;
        
        for(int i = 1; i < n; i++){
            for(int j = 1; j < m; j++){
                dungeon[i][j] += Math.max(dungeon[i-1][j], dungeon[i][j-1]);
            }
        }
        
        return -1;
    }
    
    */
	
	//<庚薦熱戚1 by saybia1993>
	
	//蝕授生稽 姶. 
	
	//dp[m][n-1] = 1; dp[m-1][n] = 1; 聖 搭背 杷1稽 獣拙.
	
	//int minHp = Math.min(dp[i+1][j], dp[i][j+1])  - dungeon[i][j]; 聖 左檎
	
	//-葵戚 蟹神檎 皐捜生稽潤, 杷亜 弦戚 猿走澗 依 掻拭 Math.min()生稽 践 旗猿走澗 蕉研 典敗.
	
	//幻鉦 却戚 希背辞 +葵戚 蟹神檎, dp[i][j] = (minHp <= 0) ? 1 : minHp;聖 搭背 陥獣 1稽 軒実背捜. 
	
	//杷亜 猿霜凶幻 益依級税 置社帖研 姥馬檎 鞠走, 幻鉦 -7猿走 猿然陥亜 杷噺差 馬檎, 益惟 +1戚闇 +10000戚闇 陥獣 -7戚雌 猿霜凶猿走 巷税耕廃 汽戚斗奄 凶庚.
	
	//-2 -3 3 
	//-5 -10 1 
	//10 30 -5 
	//--------------------
	//2147483647 2147483647 2147483647 2147483647 
	//2147483647 2147483647 2147483647 2147483647 
	//2147483647 2147483647 6 1 
	//2147483647 2147483647 1 2147483647 
	//--------------------
	//#########################
	//-2 -3 3 
	//-5 -10 1 
	//10 30 -5 
	//--------------------
	//2147483647 2147483647 2147483647 2147483647 
	//2147483647 2147483647 2147483647 2147483647 
	//2147483647 1 6 1 
	//2147483647 2147483647 1 2147483647 
	//--------------------
	//#########################
	//-2 -3 3 
	//-5 -10 1 
	//10 30 -5 
	//--------------------
	//2147483647 2147483647 2147483647 2147483647 
	//2147483647 2147483647 2147483647 2147483647 
	//1 1 6 1 
	//2147483647 2147483647 1 2147483647 
	//--------------------
	//#########################
	//-2 -3 3 
	//-5 -10 1 
	//10 30 -5 
	//--------------------
	//2147483647 2147483647 2147483647 2147483647 
	//2147483647 2147483647 5 2147483647 
	//1 1 6 1 
	//2147483647 2147483647 1 2147483647 
	//--------------------
	//#########################
	//-2 -3 3 
	//-5 -10 1 
	//10 30 -5 
	//--------------------
	//2147483647 2147483647 2147483647 2147483647 
	//2147483647 11 5 2147483647 
	//1 1 6 1 
	//2147483647 2147483647 1 2147483647 
	//--------------------
	//#########################
	//-2 -3 3 
	//-5 -10 1 
	//10 30 -5 
	//--------------------
	//2147483647 2147483647 2147483647 2147483647 
	//6 11 5 2147483647 
	//1 1 6 1 
	//2147483647 2147483647 1 2147483647 
	//--------------------
	//#########################
	//-2 -3 3 
	//-5 -10 1 
	//10 30 -5 
	//--------------------
	//2147483647 2147483647 2 2147483647 
	//6 11 5 2147483647 
	//1 1 6 1 
	//2147483647 2147483647 1 2147483647 
	//--------------------
	//#########################
	//-2 -3 3 
	//-5 -10 1 
	//10 30 -5 
	//--------------------
	//2147483647 5 2 2147483647 
	//6 11 5 2147483647 
	//1 1 6 1 
	//2147483647 2147483647 1 2147483647 
	//--------------------
	//#########################
	//-2 -3 3 
	//-5 -10 1 
	//10 30 -5 
	//--------------------
	//7 5 2 2147483647 
	//6 11 5 2147483647 
	//1 1 6 1 
	//2147483647 2147483647 1 2147483647 
	//--------------------
	//#########################
	//7

	
    
    public static int calculateMinimumHP(int[][] dungeon) {
        int m = dungeon.length;
        int n = dungeon[0].length;
        //dp[i][j] represents the minimum health points needed at position (i,j) and
        //the last row or column is just dummy (outside of the range).
        int[][] dp = new int[m+1][n+1];
        
        //Initialize the matrix to maximum possible.
        for (int i = 0; i <= m; i++)
        	Arrays.fill(dp[i], Integer.MAX_VALUE);
        
        //initializing the boundary.
        dp[m][n-1] = 1; dp[m-1][n] = 1; 
        
        for (int i = m-1; i >= 0; i--) {
        	for (int j = n-1; j >= 0; j--) {
        		int minHp = Math.min(dp[i+1][j], dp[i][j+1])  - dungeon[i][j];
        		dp[i][j] = (minHp <= 0) ? 1 : minHp;
        	}
        }
        return dp[0][0];
    }
    
    public static void main(String[] args) {
		int[][] test = {{-2,-3,3},{-5,-10,1},{10,30,-5}};
		System.out.println(calculateMinimumHP(test));
	}
}
